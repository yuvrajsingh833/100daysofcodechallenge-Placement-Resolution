
//Backtracking on Arrays
/* 
public class Backtracking{
    public static void changeArray(int arr[],int i,int val){

        if(i==arr.length){
           printArray(arr); 
           return;
        }
        arr[i]=val;
        changeArray(arr, i+1, val+1); //Recursion call of function
        arr[i]=arr[i]-2; //Backtracking 

    }

    public static void printArray(int arr[]){
        for(int i=0;i<arr.length;i++){
            System.out.print(arr[i]+" ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int arr[]=new int[5];
        changeArray(arr, 0, 1);
        printArray(arr);
    }
} */


//Day-1(Module-22 Backtracking)-22/07/2024

//findSubSets of a string

/* public class Backtracking {
    public static void findSubSets(String str,String newStr,int i){
        //base case
        if(i==str.length()){
            if(newStr.length()==0){
                System.out.println("Null");                
            }else{
                System.out.println(newStr);
            }
            return;
        }

        //recursion
        //YES Choice
        findSubSets(str,newStr+str.charAt(i),i+1);
        //No Choice
        findSubSets(str,newStr,i+1);
        
    
    }
    public static void main(String[] args) {
        String str="abc";
        String newStr="";
        findSubSets(str, newStr, 0);
    }
}
 */



//find permuntation of a string

public class Backtracking {
    public static void findStringPermuntation(String str,String ans){
        //base case
        if(str.length()==0){
            System.out.println(ans);
            return;
        }

        //recursion
        for(int i=0;i<str.length();i++){
            char curr=str.charAt(i);
            //abcde==ab+de
            String newStr=str.substring(0, i)+str.substring(i+1);
            findStringPermuntation(newStr, ans+curr);
        }
    }

    public static void main(String[] args) {
        String str="abc";
        String ans="";
        findStringPermuntation(str, ans);
    }
}
